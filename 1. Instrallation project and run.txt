////Installation////

What are the requirement to setup laravel project
-------------------------------------------------
1. Xampp Server    //Xampp: jam server
2. Composer (https://getcomposer.org/)   //https://getcomposer.org/download/ --> Download and run "Composer-Setup.exe" 
3. NodeJS
4. git (https://git-scm.com)


New Project Create:
---------------------
1. open command prompt
2. c:\xmpp\htdoc\
	
   New project create (--prefer-dist means "prefer distributable")
   ----------------------------------------------------------------
   cod:	  composer create-project --prefer-dist laravel/laravel yourProjectName
   cod:	  composer create-project --prefer-dist laravel/laravel 8.0 yourProjectName

For Multiple Athentication : install ui package
-----------------------
go to https://laravel.com/docs/7.x/frontend and copy below code

	composer require laravel/ui		//install ui package and enter
	php artisan ui bootstrap --auth		//install bootstrap authentication and enter
	npm install && npm run dev          	//to install node package manager for complete fresh scaffolding and enter

1. open command prompt from run "cmd"
2. c:/xmpp/htdocs/yourProject/Name

	now the above code here and enter

	composer require laravel/ui		<====|
	php artisan ui bootstrap --auth   	<====|
	npm install && npm run dev		<====|
	


Run Project:
------------
1. open command prompt
2. c:/xmpp/htdocs/yourProject/Name

  Run project
  -----------
  cod:	php artisan serve


Open Project in VS Code
----------------------
1. open command prompt from run "cmd"
2. c:/xmpp/htdocs/yourProject/Name

	code .

------------------------Second Step-----------------------------------------------------

*****Before migrate to create table, do the below task************

Multiple Authentication
----------------------------
1. create a database name in php-myadmin and configure in .env
2. add below field in "user" table : go to yourprojectname\database\migrations and open "....create_users_table.php"

	$table->integer('role_id')->default(2);

3. add field "role_id" in user model: go to yourprojectname\app\Models and open "User.php"

	protected $fillable = [
        'role_id',
        'name',
        'email',
        'password',
    ];

4. create a table "Role" in database and for this run below command

	php artisan make:model Role -m

5. add "name" field in role table: go to yourprojectname\database\migrations and open "....create_roles_table.php"

            $table->string('name');     //add name field

6. add field "role_id" in role model: go to yourprojectname\app\Models and open "Role.php"

	protected $fillable = [
        'name',
    ]; 

7. add a relationship between role table and user table: go to yourprojectname\app\Models and open "Role.php"

	public function user()
    {
        return $this->hasMany("App\Models\User");
    }

8. add a relationship between user table and role table: go to yourprojectname\app\Models and open "User.php"

	public function role()
    {
        return $this->belongsTo("App\Models\Role");
    }

9. make middleware: 

	php artisan make:middleware AdminMiddleware		<=====|
	php artisan make:middleware UserMiddleware		<=====|

10. config middleware:  go to yourproject\app\Http and open "Kernel.php" and config middleware in "protected $routeMiddleware"

	protected $routeMiddleware = [
        	:
        	:
        	'Admin'=>\App\Http\Middleware\AdminMiddleware::class,
        	'User'=>\App\Http\Middleware\UserMiddleware::class,
    	];

11. open AdminMiddleware: go to yourproject\app\Http\Middleware and open "AdminMiddleware.php" and below way code

	<?php

	namespace App\Http\Middleware;

	use Closure;
	use Illuminate\Http\Request;
	use Illuminate\Support\Facades\Auth;  //add

	class AdminMiddleware
	{
    		public function handle(Request $request, Closure $next)
    		{
        		if(Auth::check() && Auth::user()->role_id == 1)
			{
				return $next($request);
			}
			else
			{
				return redirect('login');
			}
    		}
	}

12. open UserMiddleware: go to yourproject\app\Http\Middleware and open "UserMiddleware.php" and below way code

	<?php

	namespace App\Http\Middleware;

	use Closure;
	use Illuminate\Http\Request;
	use Illuminate\Support\Facades\Auth;  //add

	class UserMiddleware
	{
    		public function handle(Request $request, Closure $next)
    		{
        		if(Auth::check() && Auth::user()->role_id == 2)
			{
				return $next($request);
			}
			else
			{
				return redirect('login');
			}
    		}
	}


13. run migration command to create default table in database

	php artisan migrate    <====|

14. add 2 record in "roles" table of database

	Admin      //in "name" field of first record
	User	   //in "name" field of second record  and click on "Go" button


15. RedirectIfAuthenticated config: go to yourprojectname\app\Http\Middleware and open "RedirectIfAuthenticated.php" 


    public function handle(Request $request, Closure $next, ...$guards)
    {
        $guards = empty($guards) ? [null] : $guards;

        foreach ($guards as $guard) {
            if(Auth::guard($guard)->check() && Auth::user()->role->id == 1 )
		{
			return redirect()->route('admin.dashboard');
		}
		elseif(Auth::guard($guard)->check() && Auth::user()->role->id == 2 )
		{
			return redirect()->route('user.dashboard');
		}
		else
		{
			return $next($request);
		}
        }
    }

16. create controller

	php artisan make:controller Admin/AdminController	<====|    
	php artisan make:controller User/UserController		<====|

17. add route in web.php: go to yourprojectname\routes and open "web.php"

	Route::group(['prefix'=>'admin', 'middleware'=>['admin','auth']], 'namespace'=>'Admin',  function(){
		Route::get('dashboard', [AdminController::class,'index'])->name('admin.dashboard');

	});

	Route::group(['prefix'=>'user', 'middleware'=>['user','auth']], 'namespace'=>'User',  function(){
		Route::get('dashboard', [AdminController::class,'index'])->name('admin.dashboard');

	});


18. add below function in LoginController.php : go to yourprojectname\app\Http\Controllers\Auth and open "LoginController.php"

	//after  $redirectTo = RouteServiceProvider::HOME

	protected function redirectTo()
	{
		if(Auth()->user()->role_id == 1)
		{
			return route('admin.dashboard');
		}
		if(Auth()->user()->role_id == 2)
		{
			return route('user.dashboard');
		}
	}

19. add below function in RegisterController.php : go to yourprojectname\app\Http\Controllers\Auth and open "RegisterController.php"

	//after  $redirectTo = RouteServiceProvider::HOME

	protected function redirectTo()
	{
		if(Auth()->user()->role_id == 1)
		{
			return route('admin.dashboard');
		}
		if(Auth()->user()->role_id == 2)
		{
			return route('user.dashboard');
		}
	}

     //add 'role_id' => 2  in create()

	protected function create(array $data)
    	{
        return User::create([
            'role_id' => 2,
            'name' => $data['name'],
            'email' => $data['email'],
            'password' => Hash::make($data['password']),
        ]);
    	}

20. open AdminController: app\Http\Controllers and open "AdminController.php"

	class AdminController extends Controller
	{
    		public function index()
    		{
        		return view('admin.home');
    		}
	}

21. open UserController: app\Http\Controllers and open "UserController.php"

	class UserController extends Controller
	{
    		public function index()
    		{
        		return view('user.home');
    		}
	}

22. open view folder :  go to yourprojectname\resources\views and create a folder "admin" and create a file "home.blade.php"
23. open view folder : go to yourprojectname\resources\views and create a folder "user" and create a file "home.blade.php"













