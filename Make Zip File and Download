use ZipArchive;

//file download
    public function downloadphotoZip($id)
    {
        $imgarr = []; 
        //image
        $data = Product_multiple_images::where('product_id',$id)->get();
        $productinfo = Product::find($id);
        $model_no = $productinfo->model_no;
        $serial_no = $productinfo->serial_no;

        foreach($data as $key => $value)
        {
            if(file_exists($value->image_l))
            {
                $imgarr[] =  $value->image_l;
            }
        }

        $timeName = time();
        $ziplink = $this->converToZip($imgarr,$timeName,$model_no,$serial_no);
        //return redirect($ziplink);

        //$response = response()->download('./uploads/images/product/multipleimage/'. $timeName . '.zip');
        $response = response()->download('./uploads/zipfiles/'. $timeName . '.zip');
        return $response;
    }
    public function downloadZip($id)
    {
        $imgarr = []; 
        
        //conditional_report
        $productdata = Product::where('id',$id)->get();
        $model_no = $productdata[0]->model_no;
        $serial_no = $productdata[0]->serial_no;
        if(count($productdata)>0)
        {
            foreach($productdata as $key => $value)
            {
                if(file_exists($value->conditional_report))
                {
                    $imgarr[] =  $value->conditional_report;
                }
            }
        }

        $timeName = time();
        $ziplink = $this->converToZip($imgarr,$timeName,$model_no,$serial_no);
        //return redirect($ziplink);

        //$response = response()->download('./uploads/images/product/multipleimage/'. $timeName . '.zip');
        $response = response()->download('./uploads/zipfiles/'. $timeName . '.zip');
        return $response;
    }
    public function converToZip($imgarr,$timeName,$model_no,$serial_no)
    {   //dd($imgarr);
        $zip = new ZipArchive;
        //$storage_path = 'uploads/images/product/multipleimage';
        $storage_path = 'uploads/zipfiles';
        //$timeName = time();
        $zipFileName = $storage_path . '/' . $timeName . '.zip';
        $zipPath = asset($zipFileName);
        $res = $zip->open($zipFileName, ZipArchive::CREATE | ZipArchive::OVERWRITE); 
        if ($res) 
        {
            $sl = 0;
            foreach ($imgarr as $file) 
            {
                $file = (string)$file;
                $fileinfo = pathinfo($file);
                $sl++;

                $num = "";
                if($sl < 10){$num = '00'.$sl;}
                else if($sl >=10 && $sl <99){$num = '0'.$sl;}
                else if($sl>100){$num = $sl;}

                $newfilename = $model_no.'-'.$serial_no.'-'.$num.'.'.$fileinfo['extension'];
                //$zip->addFile($file,basename($file));
                $zip->addFile($file,$newfilename);
            }
            $zip->close();

            if ($zip->open($zipFileName) === true) {
                return $zipPath;
            } else {
                return false;
            }
        }
    }
    //clear memory
    public function clear_memory()
    {
        //clear zip file from the directory
        File::cleanDirectory('./uploads/zipfiles');
        return response()->json(array(
            'result' => "Memory clear",
        ));
    }
    
    ////////in view page///////////////////////////////////////////////////////////////////////
    <a href="{{url('auction/downloadZip/'.$p->id)}}" class="btn download">
          Download Photos
    </a>
